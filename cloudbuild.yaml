
# # Copyright 2020 Google LLC
# #
# # Licensed under the Apache License, Version 2.0 (the "License");
# # you may not use this file except in compliance with the License.
# # You may obtain a copy of the License at
# #
# #      http://www.apache.org/licenses/LICENSE-2.0
# #
# # Unless required by applicable law or agreed to in writing, software
# # distributed under the License is distributed on an "AS IS" BASIS,
# # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# # See the License for the specific language governing permissions and
# # limitations under the License.
# # [START cloudbuild_go_yaml]
# # [START cloudbuild_go_test_yaml]
# steps:
#   # Run tests and save to file
#   - name: golang
#     entrypoint: /bin/bash
#     args: 
#       - -c
#       - |
#         go get -u github.com/jstemmer/go-junit-report
#         2>&1 go test -timeout 1m -v ./... | tee sponge.log
#         /go/bin/go-junit-report -set-exit-code < sponge.log > 01_test_log.xml
#   # [END cloudbuild_go_test_yaml]
  
#   # [START cloudbuild_go_image_yaml]
#   # Docker Build
#   - name: 'gcr.io/cloud-builders/docker'
#     args: ['build', '-t', ,'us-central1-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$CONTAINERNAME:$VERSION','.']
#   # [END cloudbuild_go_image_yaml]
  
#   # [START cloudbuild_go_push_yaml]
#   # Docker push to Google Artifact Registry
#   - name: 'gcr.io/cloud-builders/docker'
#     args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$CONTAINERNAME:$VERSION']
# #    #'us-central1-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/dataazmolk:01']
#   # [END cloudbuild_go_push_yaml]
  
  
  
#   # [START cloudbuild_go_deploy_yaml]
#   # Deploy to Cloud Run
#   - name: 'gcr.io/cloud-builders/gcloud'
#     args: ['run', 'deploy', 'cloud-computing-assignment', 
#            '--image=us-central1-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$CONTAINERNAME:$VERSION', 
#            '--region', 'us-central1', '--platform', 'managed']
#   # [END cloudbuild_go_deploy_yaml]

# # [START cloudbuild_go_logs_yaml]
# # Save test logs to Google Cloud Storage
# #BUCKET_NAME: 'artifacts_write-go-csv-in-gcp-334404_niro'
# artifacts:
#   objects:
#     location: gs://cloud-computing-project-2022/logs
#     paths:
#       - 01_test_log.xml
# # [END cloudbuild_go_logs_yaml]
# # Store images in Google Artifact Registry
# images:
#   - us-central1-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$CONTAINERNAME:$VERSION
# # [END cloudbuild_go_yaml]


# substitutions:
#     #GCP Specific configuration. Please DON'T change anything
   
#     GKE_CLUSTER: cloud-computing-assignment
    
#     #Repository Specific configuration. DevOps can change this settings
#     DEPLOYMENTNAME: cloud-computing-assignment-service
#     CONTAINERNAME: cloud-computing-assignment-service    
# #     _REPO_NAME: cicd-service
    
#     # Developers ONLY change
#     VERSION: v1.0
    
# options:
#     substitution_option: 'ALLOW_LOOSE'



# Clone the git repo.
  #id field to set a unique identifier for a build step.
  # <github_repository> is the name of the gethub repository to be clone
  #args take a list of arguments 
  steps:
  
  # Run tests and save to file
  - name: golang
    entrypoint: /bin/bash
    args: 
      - -c
      - |
        go get -u github.com/jstemmer/go-junit-report
        2>&1 go test -timeout 1m -v ./... | tee sponge.log
        /go/bin/go-junit-report -set-exit-code < sponge.log > 01_test_log.xml
  # [END cloudbuild_go_test_yaml]
  - name: 'gcr.io/cloud-builders/git'
    id: 'Clone'
    args: ['clone', 'https://github.com/IamPeterPan/cloudbuildingtest-main-check.git']
  
 #builds the container image.
  #build is the entrypoint to the Docker cloud builder
  #-t is the Docker tag
  #<preffered_image_name> is the name of the image to be built
  #. is the location of the source code
  
  - name: 'gcr.io/cloud-builders/docker'
    args:
    - 'build'
    - '-t'
    - 'gcr.io/$PROJECT_ID/$REPO_NAME/cloud-computing-assignment-service/cloud-computing-assignment-service-image:v1.0'
    - '.'
  # pushes the image to Container Registry
   # The PROJECT_ID and SHORT_SHA variables are automatically replaced by Cloud Build.
  - name: 'gcr.io/cloud-builders/docker'
    id: Push
    args:
    - 'push'
    - 'gcr.io/$PROJECT_ID/$REPO_NAME/cloud-computing-assignment-service/cloud-computing-assignment-service-image:v1.0'
  
# Store images in Google Artifact Registry
images:
  - gcr.io/$PROJECT_ID/$REPO_NAME/cloud-computing-assignment-service/cloud-computing-assignment-service-image:v1.0
# [END cloudbuild_go_yaml]
